#
# @file Zsh alias file
#
# @copyright (c) 2006-present, Christoph Kappel <christoph@unexist.dev>
# @version $Id$
#

# Delete old aliases
unalias -m "*"

# ls
alias ls='lsd -hF --group-dirs=first' #-phFG'
alias la='ls -a'
alias l='ls -l'

# Miscellaneous
alias q='clear && logout'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias grep='grep -nI --color=always'
alias less='less -Xr'
alias reload="source $HOME/.zshrc"

# Security
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# Sudo
if [ -e /usr/bin/sudo ] ; then
    alias halt="sudo /sbin/halt"
    alias reboot="sudo /sbin/reboot"
    alias killjobs="sudo lprm -"
    alias s="sudo"
    alias fuck='sudo $(fc -ln -1)'

    # Based on dist
    if [ -e /usr/bin/pacman ] ; then
        alias p="packer --noedit"
        alias I="sudo pacman -S"
        alias R="sudo pacman -R"
        alias S="pacman -Q"
    elif [ -e /usr/bin/apt-get ] ; then
        alias p="sudo apt-get"
        alias I="sudo apt-get install"
        alias R="sudo apt-get remove"
        alias S="apt-cache search"
        alias keptback="sudo apt-get --with-new-pkgs upgrade"
    fi
fi

# hh
command -v hstr &>/dev/null

if [ $? -eq 0 ]; then
    export HSTR_CONFIG=prompt-bottom,hicolor
    alias hh="hstr"
fi


# fff
command -v fff &>/dev/null

if [ $? -eq 0 ]; then
    function f() {
        local fffpwd="${HOME}/.fff_d"

        FFF_CD_ON_EXIT=1 FFF_CD_FILE=${fffpwd} fff

        if [ -f $fffpwd ] ; then
            cd "`cat ${fffpwd}`"
        fi
    }
fi

# llama
command -v llama &>/dev/null

if [ $? -eq 0 ]; then
    function ll {
        cd "$(llama)"
    }
fi

# Valgrind
command -v valgrind &>/dev/null

if [ $? -eq 0 ]; then
    alias memcheck="valgrind --tool=memcheck --leak-check=full --suppressions=$HOME/.suppressions"
    alias addrcheck="valgrind --tool=addrcheck --leak-check=full --suppressions=$HOME/.suppressions"
    alias sgcheck="valgrind --tool=exp-sgcheck"
fi

# Calc
command -v concalc &>/dev/null

if [ $? -eq 0 ]; then
    alias calc='noglob concalc'
fi

# Mercurial
command -v hg &>/dev/null

if [ $? -eq 0 ]; then
    alias hgs="hg status -X unknown"
    alias hgp="hg push"

    command -v fzf &>/dev/null

    if [ $? -eq 0 ]; then
        function hgd() {
            hg diff $(hg status -X unknown | fzf --tac --no-sort | cut -d ' ' -f2 | xargs)
        }

        function hgc() {
            hg ci $(hg status -X unknown | fzf --multi --tac --no-sort | cut -d ' ' -f2 | xargs)
        }
    fi
fi

# Git
command -v git &>/dev/null

if [ $? -eq 0 ]; then
    alias gits="git status --untracked-files=no --short"
    alias gitp="git push"

    command -v fzf &>/dev/null

    if [ $? -eq 0 ]; then
        function gitd() {
            git diff $(git status --untracked-files=no --short | fzf --tac --no-sort | cut -d ' ' -f3 | xargs)
        }

        function gitc() {
            git commit $(git status --untracked-files=no --short | fzf --multi --tac --no-sort | cut -d ' ' -f3 | xargs)
        }
    fi
fi

# Mpd
command -v mpc &>/dev/null

if [ $? -eq 0 ]; then
    alias mpc="nocorrect mpc"
fi

# Firefox
command -v firefox &>/dev/null

if [ $? -eq 0 ]; then
    alias ff="firefox -no-remote -ProfileManager &>/dev/null &!"
fi

# Chrome/chromium
for i in chrome chromium google-chrome chromium-browser; do
    command -v $i &>/dev/null

    if [ $? -eq 0 ] ; then
        alias chrome="$i &>/dev/null &!"
        alias chromeunsafe="$i --disable-web-security --user-data-dir=/tmp --allow-file-access-from-files --enable-unrestricted-ssl3-fallback --ignore-certificate-errors --temp-profile &>/dev/null &!"
    fi
done

# Xephyr
command -v Xephyr &>/dev/null

if [ $? -eq 0 ]; then
    XEPHYR_OPTS="-ac -noreset +extension RANDR +xinerama"
    #-keybd ephyr,,,xkbmodel=evdev,xkblayout=de"
    alias xeph1024="Xephyr $XEPHYR_OPTS -name xeph1024 -screen 1024x600 :2 &>/dev/null &!"
    alias xeph800="Xephyr $XEPHYR_OPTS -name xeph800 -screen 800x800 :2 &!"
    alias xeph640="Xephyr $XEPHYR_OPTS -name xeph640 -screen 640x480 :2 &!"
fi

# GVim
command -v gvim &>/dev/null

if [ $? -eq 0 ]; then
    alias gvim="gvim &>/dev/null &!"
fi

# Keychain
command -v keychain &>/dev/null

if [ $? -eq 0 ]; then
    alias kc="keychain -q --nocolor id_rsa && source $HOME/.keychain/$HOST-sh"
fi

# subtle
command -v subtle &>/dev/null

if [ $? -eq 0 ]; then
    alias sirb='ripl -r"subtle/subtlext"'

    if [ -f $HOME/projects/subtle-contrib/ruby/vitag.rb ] ; then
        alias vitag="ruby $HOME/projects/subtle-contrib/ruby/vitag.rb"
    fi
fi

# ImageMagick
command -v import &>/dev/null

if [ $? -eq 0 ]; then
    alias import="import +repage"
fi

# Rsync
command -v rsync &>/dev/null

if [ $? -eq 0 ]; then
  alias rsync="USER=unexist rsync -trvh --progress"
fi

# Java
if [ -e "/usr/lib/jvm/default-java" ] ; then
  export JAVA_HOME="/usr/lib/jvm/default-java"
fi

# xrandr
command -v xrandr &>/dev/null

if [ $? -eq 0 ]; then
    alias xrandr3="xrandr \
        --output eDP-1 --primary --mode 1366x768 --pos 0x0 \
        --output DP-2-2 --mode 1920x1200 --pos 768x0 --right-of eDP-1 \
        --output DP-2-3 --mode 1920x1080 --pos 2688x0 --right-of DP-2-2 --rotate left \
        --dpi 96"

    alias xrandr2="xrandr \
        --output eDP-1 --primary --mode 1366x768 --pos 0x0 \
        --output DP-2-2 --mode 1920x1080 --pos 768x0 --right-of eDP-1 \
        --output DP-2-3 --off
        --dpi 96"

    alias xrandr1="xrandr \
        --output eDP-1 --primary --mode 1366x768 --pos 0x0 \
        --output DP-2-2 --off \
        --output DP-2-3 --off \
        --dpi 96"
fi

# lsof
command -v lsof &>/dev/null

if [ $? -eq 0 ]; then
    function p2p() {
        sudo lsof -i -P | grep LISTEN | grep :$1
    }
fi

# Delta
command -v delta &>/dev/null

if [ $? -eq 0 ]; then
    alias delta="delta -s"
fi

# k8s
command -v kubectl &>/dev/null

if [ $? -eq 0 ]; then
    local configs="$HOME/.kube/config"

    if [ -d "$HOME/.kube" ] && ! [ -z `find "$HOME/.kube" -maxdepth 1 -type f -name "*.yaml"` ] ; then
        for config in $HOME/.kube/*.yaml ; do
            configs="$configs:$config"
        done
    fi

    export KUBECONFIG="$configs"

    alias k="kubectl"
    alias ka="kubectl apply"
    alias kd="kubectl delete"
    alias kctx="kubectl ctx"
    alias kns="kubectl ns"
    alias kip="kubectl ipick"
    alias kpf="kubectl port-forward"

    alias kdp="kubectl get pods | fzf --multi --tac --no-sort | cut -d ' ' -f1 | xargs kubectl delete pod"

    # Add custom plugins to path
    if [ -d "$HOME/Projects/kubectl-plugins/bin" ] ; then
        export PATH="$HOME/Projects/kubectl-plugins/bin:$PATH"
    fi
fi

command -v minikube &>/dev/null

if [ $? -eq 0 ]; then
    alias mk="minikube"
    alias mkv="minikube --driver=virtualbox"

    function mkdocker {
        eval $(minikube -p minikube docker-env)
    }
fi

command -v kustomize &>/dev/null

if [ $? -eq 0 ]; then
    alias ku="kustomize"
fi

# Docker
command -v lazydocker &>/dev/null

if [ $? -eq 0 ]; then
    alias lzd="lazydocker"
fi

# Podman
command -v podman &>/dev/null

if [ $? -eq 0 ]; then
    alias pd="podman"

    alias pdls="podman ps -a --pod --format 'table {{.ID}} {{.Image}} {{.Status}} {{.Names}} {{.PodName}}'"
    alias pdrc="podman ps -a | fzf --multi --tac --no-sort | cut -d ' ' -f1 | xargs podman rm -f"
    alias pdrp="podman pod ls | fzf --multi --tac --no-sort | cut -d ' ' -f1 | xargs podman pod rm -f"
    alias pdic="podman ps -a | fzf --multi --tac --no-sort | cut -d ' ' -f1 | xargs podman inspect"
    alias pdip="podman pod ls | fzf --multi --tac --no-sort | cut -d ' ' -f1 | xargs podman inspect"
    alias pdir="podman image ls | fzf --multi --tac --no-sort | cut -d ' ' -f1 | xargs podman image rm"
    alias pdps="podman ps -a --pod --format 'table {{.ID}} {{.Image}} {{.Status}} {{.Names}} {{.PodName}}'"
    alias pdonce="podman run -it --rm"

    function pdive() {
        local ID=`podman images | fzf --tac --no-sort | cut -d ' ' -f9 | xargs -r`

        if ! [ -z "$ID" ] ; then
            dive $ID
        fi
    }

    function pdshc() {
        local ID=`podman ps | fzf --tac --no-sort | cut -d ' ' -f1 | xargs -r`

        if ! [ -z "$ID" ] ; then
            podman exec -it $ID /bin/sh
        fi
    }

    function pdshp() {
        local ID=`podman pod ls | fzf --tac --no-sort | cut -d ' ' -f1 | xargs -r`

        if ! [ -z "$ID" ] ; then
            podman run -it --pod $ID --rm markeijsermans/debug:kitchen-sink /bin/bash
        fi
    }

    function pdl() {
        eval `podman ps -a | fzf --multi --tac --no-sort | cut -d ' ' -f1 | sed -nE "s#(.*)#-l \'podman logs -f \1\'#gp" | xargs -r -0 -n10 -d'\n' echo multitail -du -C -cT ansi`
    }
fi

# Nomad
command -v nomad &>/dev/null

if [ $? -eq 0 ]; then
    alias nd="nomad"
fi

# Mvn
command -v mvn &>/dev/null

if [ $? -eq 0 ] ; then
    alias mvninsec="mvn  -Dmaven.wagon.http.ssl.insecure=true"
fi

# Navi
command -v navi &>/dev/null

if [ $? -eq 0 ]; then
    bindkey -s "^N" 'navi^M'
fi

# macOS
if [[ "x$OSTYPE" == "xdarwin"* ]] ; then
    alias ldd="otool -L"

    if type brew &>/dev/null; then
        HOMEBREW_PREFIX=$(brew --prefix)

        # gnubin
        for d in ${HOMEBREW_PREFIX}/opt/*/libexec/gnubin; do
            export PATH="$d:$PATH"
        done

        # gnuman
        for d in ${HOMEBREW_PREFIX}/opt/*/libexec/gnuman; do
            export MANPATH=$d:$MANPATH
        done
    fi

    if [ -e "/usr/local/opt/libpq/bin" ] ; then
        export PATH="/usr/local/opt/libpq/bin:$PATH"
    fi

    # VScode
    if [ -e /Applications/Visual\ Studio\ Code.app ] ; then
        alias vopen="open -a 'Visual Studio Code'"
    fi

    # Chrome
    if [ -e /Applications/Google\ Chrome.app ] ; then
         alias copen="open -a 'Google Chrome.app'"
    fi
fi
